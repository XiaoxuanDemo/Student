<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lixian.mapper.TeacherMapper">
  <resultMap id="BaseResultMap" type="com.lixian.model.Teacher">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="teachername" jdbcType="VARCHAR" property="teachername" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="telphone" jdbcType="VARCHAR" property="telphone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
  </resultMap>
  <sql id="Base_Column_List">
    id, teachername, password, telphone, email
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from teacher
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from teacher
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.lixian.model.Teacher">
    insert into teacher (id, teachername, password, 
      telphone, email)
    values (#{id,jdbcType=VARCHAR}, #{teachername,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{telphone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.lixian.model.Teacher">
    insert into teacher
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="teachername != null">
        teachername,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="telphone != null">
        telphone,
      </if>
      <if test="email != null">
        email,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="teachername != null">
        #{teachername,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="telphone != null">
        #{telphone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lixian.model.Teacher">
    update teacher
    <set>
      <if test="teachername != null">
        teachername = #{teachername,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="telphone != null">
        telphone = #{telphone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lixian.model.Teacher">
    update teacher
    set teachername = #{teachername,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      telphone = #{telphone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="searchTeacher" parameterType="java.lang.String" resultMap="BaseResultMap">
  	select id,teachername,telphone,email FROM teacher where teachername like "%"#{teachername,jdbcType=VARCHAR}"%"
  </select>
  <select id="searchStudent" parameterType="java.lang.String" resultType="com.lixian.model.StudentInfo">
select distinct a.id,a.stunam,b.classname from user as a,banji as b,teacher as c,kecheng as d,stukecheng as e where d.teahcerid=c.id and e.kechengid=d.id and a.id=e.stuid and b.classid=a.classid and c.id=#{id,jdbcType=VARCHAR}
	<if test="classid!=null">
		and b.classid=#{classid,jdbcType=VARCHAR}
	</if>
	<if test="banjiid!=null">
		and d.id=#{kechengid,jdbcType=VARCHAR}
	</if>
  </select>
</mapper>